{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Trabalho\\\\frontend\\\\Desafio Globo\\\\front\\\\src\\\\drawer\\\\customDrawer.js\",\n    _s = $RefreshSig$();\n\nimport { Drawer, Box, TextField, Typography, Button, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { Edit as EditIcon, Close as CloseIcon } from '@material-ui/icons';\nimport React, { useState, useEffect } from 'react';\nimport DrawerStyle from './customDrawer.style';\n\nfunction CustomDrawer(props) {\n  _s();\n\n  const styles = DrawerStyle();\n  const [check, setCheck] = useState(false);\n  useEffect(() => {\n    setCheck(props.row.status);\n  }, [props]);\n\n  async function updateEntry(event) {\n    event.preventDefault();\n    console.log(event);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    anchor: \"right\",\n    open: props.open,\n    onClose: props.handleClose,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: styles.head,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: styles.head,\n          children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n            className: styles.grayIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: styles.darkGrayText,\n            children: props.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.headButton,\n          variant: \"contained\",\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            className: styles.grayButtonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form,\n        onSubmit: updateEntry,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: styles.formText,\n          id: \"user\",\n          label: \"Usu\\xE1rio\",\n          type: \"text\",\n          style: {\n            color: 'green'\n          },\n          defaultValue: props.row != null ? props.row.username : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: styles.formText,\n          id: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          defaultValue: props.row != null ? props.row.email : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: styles.formText,\n          id: \"rules\",\n          label: \"Regras\",\n          defaultValue: props.row != null ? props.row.rules : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: check,\n            onChange: event => {\n              setCheck(event.target.checked);\n            },\n            name: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this),\n          label: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.formButton,\n          variant: \"outlined\",\n          type: \"submit\",\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomDrawer, \"MlGyz5WnialQ8kF9iIFA++BZIgw=\");\n\n_c = CustomDrawer;\nexport default CustomDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDrawer\");","map":{"version":3,"sources":["D:/Trabalho/frontend/Desafio Globo/front/src/drawer/customDrawer.js"],"names":["Drawer","Box","TextField","Typography","Button","Checkbox","FormControlLabel","Edit","EditIcon","Close","CloseIcon","React","useState","useEffect","DrawerStyle","CustomDrawer","props","styles","check","setCheck","row","status","updateEntry","event","preventDefault","console","log","open","handleClose","body","head","grayIcon","darkGrayText","type","headButton","grayButtonIcon","form","formText","color","username","email","rules","target","checked","formButton"],"mappings":"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","sourcesContent":["import { Drawer, Box, TextField, Typography, Button, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { Edit as EditIcon, Close as CloseIcon } from '@material-ui/icons';\r\nimport React, { useState, useEffect } from 'react';\r\nimport DrawerStyle from './customDrawer.style';\r\n\r\nfunction CustomDrawer(props) {\r\n    const styles = DrawerStyle();\r\n    const [check, setCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setCheck(props.row.status);\r\n    }, [props]);\r\n\r\n    async function updateEntry(event) {\r\n        event.preventDefault()\r\n        console.log(event);\r\n  \r\n    };\r\n\r\n    return (\r\n        <Drawer\r\n            anchor=\"right\"\r\n            open={props.open}\r\n            onClose={props.handleClose}>\r\n            <Box className={styles.body}>\r\n                <Box className={styles.head}>\r\n                    <Box className={styles.head}>\r\n                        <EditIcon className={styles.grayIcon} />\r\n                        <Typography className={styles.darkGrayText}>{props.type}</Typography>\r\n                    </Box>\r\n                    <Button\r\n                        className={styles.headButton}\r\n                        variant='contained'\r\n                        onClick={props.handleClose}>\r\n                        <CloseIcon className={styles.grayButtonIcon} />\r\n                    </Button>\r\n                </Box>\r\n                <form className={styles.form} onSubmit={updateEntry}>\r\n                    <TextField\r\n                        className={styles.formText}\r\n                        id=\"user\"\r\n                        label=\"Usuário\"\r\n                        type=\"text\"\r\n                        style={{ color: 'green' }}\r\n                        defaultValue={props.row != null ? props.row.username : ''} />\r\n                    <TextField\r\n                        className={styles.formText}\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        defaultValue={props.row != null ? props.row.email : ''} />\r\n                    <TextField\r\n                        className={styles.formText}\r\n                        id=\"rules\"\r\n                        label=\"Regras\"\r\n                        defaultValue={props.row != null ? props.row.rules : ''} />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={check}\r\n                                onChange={(event) => { setCheck(event.target.checked) }}\r\n                                name=\"status\"\r\n                            />\r\n                        }\r\n                        label=\"Status\" />\r\n                    <Button\r\n                        className={styles.formButton}\r\n                        variant='outlined'\r\n                        type=\"submit\">\r\n                        Confirmar\r\n                    </Button>\r\n                </form>\r\n            </Box>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default CustomDrawer;"]},"metadata":{},"sourceType":"module"}