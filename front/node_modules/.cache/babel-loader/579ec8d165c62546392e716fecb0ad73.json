{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Trabalho\\\\frontend\\\\Desafio Globo\\\\front\\\\src\\\\body\\\\modal\\\\customModal.js\";\nimport { Modal, Box, Typography, ButtonGroup, Button } from '@material-ui/core';\nimport { HighlightOff as HighlightOffIcon } from '@material-ui/icons';\nimport React from 'react';\nimport ModalStyle from './customModal.style';\n\nfunction CustomModal(props) {\n  const styles = ModalStyle();\n\n  async function deleteEntry() {\n    try {\n      let url = `http://localhost:8080/user/${props.ids}`;\n      let response = await fetch(url, {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let json = await response.json();\n      if (json.result.users != null) setRows(Array.from(json.result.users));else setRows([]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: styles.modal,\n    open: props.open,\n    onClose: props.handleClose,\n    \"aria-labelledby\": \"delete-modal\",\n    \"aria-describedby\": \"delete-user-modal\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"div\",\n      className: styles.paper,\n      children: [/*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n        className: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: styles.text,\n        children: \"Voc\\xEA est\\xE1 prestes a apagar um ou m\\xFAltiplos usu\\xE1rios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: styles.text,\n        children: \"Voc\\xEA realmente deseja deletar estas entradas? Este processo n\\xE3o pode ser desfeito.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        className: styles.group,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          \"aria-label\": \"home\",\n          className: styles.firstButton,\n          style: {\n            borderRadius: 4\n          },\n          variant: \"contained\",\n          onClick: props.handleClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          \"aria-label\": \"settings\",\n          className: styles.lastButton,\n          style: {\n            borderRadius: 4\n          },\n          variant: \"contained\",\n          children: \"Deletar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CustomModal;\nexport default CustomModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomModal\");","map":{"version":3,"sources":["D:/Trabalho/frontend/Desafio Globo/front/src/body/modal/customModal.js"],"names":["Modal","Box","Typography","ButtonGroup","Button","HighlightOff","HighlightOffIcon","React","ModalStyle","CustomModal","props","styles","deleteEntry","url","ids","response","fetch","method","headers","Accept","json","result","users","setRows","Array","from","error","console","modal","open","handleClose","paper","icon","text","group","firstButton","borderRadius","lastButton"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,UAArB,EAAiCC,WAAjC,EAA8CC,MAA9C,QAA4D,mBAA5D;AACA,SAASC,YAAY,IAAIC,gBAAzB,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAMC,MAAM,GAAGH,UAAU,EAAzB;;AAEA,iBAAeI,WAAf,GAA6B;AAC3B,QAAI;AACF,UAAIC,GAAG,GAAI,8BAA6BH,KAAK,CAACI,GAAI,EAAlD;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxBH,GADwB,EACnB;AACLI,QAAAA,MAAM,EAAE,QADH;AAELC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT;AAFJ,OADmB,CAA1B;AAQA,UAAIC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAjB;AACA,UAAIA,IAAI,CAACC,MAAL,CAAYC,KAAZ,IAAqB,IAAzB,EAA+BC,OAAO,CAACC,KAAK,CAACC,IAAN,CAAWL,IAAI,CAACC,MAAL,CAAYC,KAAvB,CAAD,CAAP,CAA/B,KACKC,OAAO,CAAC,EAAD,CAAP;AACN,KAbD,CAaE,OAAOG,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;;AAAA;AAED,sBACI,QAAC,KAAD;AACI,IAAA,SAAS,EAAEf,MAAM,CAACiB,KADtB;AAEI,IAAA,IAAI,EAAElB,KAAK,CAACmB,IAFhB;AAGI,IAAA,OAAO,EAAEnB,KAAK,CAACoB,WAHnB;AAII,uBAAgB,cAJpB;AAKI,wBAAiB,mBALrB;AAAA,2BAMI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,SAAS,EAAEnB,MAAM,CAACoB,KAAvC;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAEpB,MAAM,CAACqB;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAErB,MAAM,CAACsB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AAAa,QAAA,SAAS,EAAEtB,MAAM,CAACsB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEtB,MAAM,CAACuB,KAA/B;AAAA,gCACI,QAAC,MAAD;AACI,wBAAW,MADf;AAEI,UAAA,SAAS,EAAEvB,MAAM,CAACwB,WAFtB;AAGI,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAHX;AAII,UAAA,OAAO,EAAC,WAJZ;AAKI,UAAA,OAAO,EAAE1B,KAAK,CAACoB,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,MAAD;AACI,wBAAW,UADf;AAEI,UAAA,SAAS,EAAEnB,MAAM,CAAC0B,UAFtB;AAGI,UAAA,KAAK,EAAE;AAAED,YAAAA,YAAY,EAAE;AAAhB,WAHX;AAII,UAAA,OAAO,EAAC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;KArDQ3B,W;AAuDT,eAAeA,WAAf","sourcesContent":["import { Modal, Box, Typography, ButtonGroup, Button } from '@material-ui/core';\r\nimport { HighlightOff as HighlightOffIcon } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport ModalStyle from './customModal.style';\r\n\r\nfunction CustomModal(props) {\r\n    const styles = ModalStyle();\r\n\r\n    async function deleteEntry() {\r\n      try {\r\n        let url = `http://localhost:8080/user/${props.ids}`;\r\n        let response = await fetch(\r\n          url, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        let json = await response.json();\r\n        if (json.result.users != null) setRows(Array.from(json.result.users));\r\n        else setRows([]);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            className={styles.modal}\r\n            open={props.open}\r\n            onClose={props.handleClose}\r\n            aria-labelledby=\"delete-modal\"\r\n            aria-describedby=\"delete-user-modal\">\r\n            <Box component='div' className={styles.paper}>\r\n                <HighlightOffIcon className={styles.icon} />\r\n                <Typography variant=\"h5\" className={styles.text}>Você está prestes a apagar um ou múltiplos usuários</Typography >\r\n                <Typography  className={styles.text}>Você realmente deseja deletar estas entradas? Este processo não pode ser desfeito.</Typography >\r\n                <ButtonGroup className={styles.group}>\r\n                    <Button\r\n                        aria-label='home'\r\n                        className={styles.firstButton}\r\n                        style={{ borderRadius: 4 }}\r\n                        variant='contained'\r\n                        onClick={props.handleClose}>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button\r\n                        aria-label='settings'\r\n                        className={styles.lastButton}\r\n                        style={{ borderRadius: 4 }}\r\n                        variant='contained'>\r\n                        Deletar\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Box>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default CustomModal;"]},"metadata":{},"sourceType":"module"}