{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Trabalho\\\\frontend\\\\Desafio Globo\\\\front\\\\src\\\\body\\\\body.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Container, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Row from './row/row';\nimport BodyStyle from './body.style';\n\nfunction Body(props) {\n  _s();\n\n  const styles = BodyStyle();\n  const [rows, setRows] = useState([]);\n  const types = ['', 'USUÁRIO', 'EMAIL', 'DATA DE INCLUSÃO', 'DATA DE ALTERAÇÃO', 'REGRAS', 'STATUS', 'AÇÕES'];\n\n  async function getUsers() {\n    try {\n      let response = await fetch('http://localhost:8080/user');\n      let json = await response.json();\n      if (json.result != null) setRows(Array.from(json.result));else setRows([]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  ;\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: styles.body,\n    minHeight: props.emptySpace,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: styles.table,\n          \"aria-label\": \"user table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            className: styles.head,\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: types.map(type => /*#__PURE__*/_jsxDEV(TableCell, {\n                className: styles.headCell,\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 39\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map(row => /*#__PURE__*/_jsxDEV(Row, {\n              row: row,\n              index: rows.indexOf(row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 35\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Body, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/Trabalho/frontend/Desafio Globo/front/src/body/body.js"],"names":["Box","Container","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","React","useState","useEffect","Row","BodyStyle","Body","props","styles","rows","setRows","types","getUsers","response","fetch","json","result","Array","from","error","console","body","emptySpace","container","table","head","map","type","headCell","row","indexOf","length","rowsPerPage","page","handleChangePage","handleChangeRowsPerPage"],"mappings":"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","sourcesContent":["import { Box, Container, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, TablePagination } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Row from './row/row';\r\nimport BodyStyle from './body.style';\r\n\r\nfunction Body(props) {\r\n  const styles = BodyStyle();\r\n  const [rows, setRows] = useState([]);\r\n  const types = ['', 'USUÁRIO', 'EMAIL', 'DATA DE INCLUSÃO', 'DATA DE ALTERAÇÃO', 'REGRAS', 'STATUS', 'AÇÕES']\r\n\r\n  async function getUsers() {\r\n    try {\r\n      let response = await fetch(\r\n        'http://localhost:8080/user'\r\n      );\r\n      let json = await response.json();\r\n      if (json.result != null) setRows(Array.from(json.result));\r\n      else setRows([]);\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={styles.body} minHeight={props.emptySpace}>\r\n      <Container maxWidth={false}>\r\n        <TableContainer component={Paper} className={styles.container}>\r\n          <Table className={styles.table} aria-label=\"user table\">\r\n            <TableHead className={styles.head}>\r\n              <TableRow>\r\n                {types.map((type) => (<TableCell className={styles.headCell}>{type}</TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (<Row row={row} index={rows.indexOf(row)}/>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Body;"]},"metadata":{},"sourceType":"module"}