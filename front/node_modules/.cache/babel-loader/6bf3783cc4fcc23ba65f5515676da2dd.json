{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Trabalho\\\\frontend\\\\Desafio Globo\\\\front\\\\src\\\\footer\\\\footer.js\",\n    _s = $RefreshSig$();\n\nimport { AppBar, Typography, Toolbar } from '@material-ui/core';\nimport FooterStyle from './footer.style';\nimport { RadioButtonChecked as RadioIcon, Update as UpdateIcon, Tv as TvIcon } from '@material-ui/icons';\nimport { useState, useEffect, forwardRef } from 'react';\n\nfunction Footer() {\n  _s();\n\n  const styles = FooterStyle();\n  const [time, setTime] = useState(new Date());\n  const [encounter, setEncounter] = useState('');\n  const month = [\"Janeiro\", \"Fevereiro\", \"Maro\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\n  useEffect(() => {\n    async function getMeeting() {\n      try {\n        let response = await fetch('http://localhost:8080/meeting');\n        let json = await response.json();\n        if (json.item != null) setEncounter(json.item.date);else setEncounter('Sem encontros marcados');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    ;\n\n    function tick() {\n      setTime(new Date());\n    }\n\n    let interval = setInterval(() => {\n      tick();\n      getMeeting();\n    }, 1000);\n    return function cleanup() {\n      clearInterval(interval);\n    };\n  });\n  return /*#__PURE__*/forwardRef((props, ref) => {\n    return /*#__PURE__*/_jsxDEV(AppBar, {\n      className: styles.bar,\n      forwardedRef: ref,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(RadioIcon, {\n          className: styles.orange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.orangeText,\n          children: \"NO AR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TvIcon, {\n          className: styles.tv\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.tvText,\n          children: [\"ENCONTRO - \", encounter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UpdateIcon, {\n          className: styles.update\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.updateText,\n          children: [\"\\xDAltima atualiza\\xE7\\xE3o em \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"10:28\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.date,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: time.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 47\n          }, this), \" de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: month[time.getMonth()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 84\n          }, this), \" de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: time.getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 129\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.clock,\n          variant: \"h4\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"\\u2044\\u2044 \", time.getHours(), \":\", time.getMinutes(), \":\", time.getSeconds()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  });\n}\n\n_s(Footer, \"hDNG6Zb3jb/JFzEnjVlvkgK6aeQ=\");\n\n_c = Footer;\nexport default Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["D:/Trabalho/frontend/Desafio Globo/front/src/footer/footer.js"],"names":["AppBar","Typography","Toolbar","FooterStyle","RadioButtonChecked","RadioIcon","Update","UpdateIcon","Tv","TvIcon","useState","useEffect","forwardRef","Footer","styles","time","setTime","Date","encounter","setEncounter","month","getMeeting","response","fetch","json","item","date","error","console","tick","interval","setInterval","cleanup","clearInterval","props","ref","bar","orange","orangeText","tv","tvText","update","updateText","getDate","getMonth","getFullYear","clock","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import { AppBar, Typography, Toolbar } from '@material-ui/core';\r\nimport FooterStyle from './footer.style';\r\nimport { RadioButtonChecked as RadioIcon, Update as UpdateIcon, Tv as TvIcon } from '@material-ui/icons';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\n\r\nfunction Footer() {\r\n  const styles = FooterStyle();\r\n  const [time, setTime] = useState(new Date());\r\n  const [encounter, setEncounter] = useState('');\r\n  const month = [\"Janeiro\", \"Fevereiro\", \"Maro\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\r\n\r\n  useEffect(() => {\r\n    async function getMeeting() {\r\n      try {\r\n        let response = await fetch(\r\n          'http://localhost:8080/meeting'\r\n        );\r\n        let json = await response.json();\r\n        if (json.item != null) setEncounter(json.item.date);\r\n        else setEncounter('Sem encontros marcados');\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    function tick() {\r\n      setTime(new Date())\r\n    }\r\n    let interval = setInterval(\r\n      () => {\r\n        tick();\r\n        getMeeting();\r\n      },\r\n      1000\r\n    );\r\n    return function cleanup() {\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n\r\n  return forwardRef((props, ref) => {\r\n    return (\r\n      <AppBar className={styles.bar} forwardedRef={ref}>\r\n        <Toolbar>\r\n          <RadioIcon className={styles.orange} />\r\n          <Typography className={styles.orangeText}>NO AR</Typography >\r\n          <TvIcon className={styles.tv} />\r\n          <Typography className={styles.tvText}>ENCONTRO - {encounter}</Typography >\r\n          <UpdateIcon className={styles.update} />\r\n          <Typography className={styles.updateText}>Última atualização em <strong>10:28</strong></Typography >\r\n          <Typography className={styles.date}><strong>{time.getDate()}</strong> de <strong>{month[time.getMonth()]}</strong> de <strong>{time.getFullYear()}</strong></Typography >\r\n          <Typography className={styles.clock} variant='h4'><strong>&#8260;&#8260; {time.getHours()}:{time.getMinutes()}:{time.getSeconds()}</strong></Typography >\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  });\r\n}\r\n\r\nexport default Footer;"]},"metadata":{},"sourceType":"module"}