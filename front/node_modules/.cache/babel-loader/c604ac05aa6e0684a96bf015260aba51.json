{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Trabalho\\\\frontend\\\\Desafio Globo\\\\front\\\\src\\\\footer\\\\footer.js\",\n    _s = $RefreshSig$();\n\nimport { Typography, Toolbar } from '@material-ui/core';\nimport FooterStyle from './footer.style';\nimport { RadioButtonChecked as RadioIcon, Update as UpdateIcon, Tv as TvIcon } from '@material-ui/icons';\nimport React, { useState, useEffect } from 'react';\n\nfunction Footer() {\n  _s();\n\n  const styles = FooterStyle();\n  const [time, setTime] = useState(new Date.now());\n  useEffect(() => {\n    function tick() {\n      setTime(new Date.now());\n    }\n\n    let intervalID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(intervalID);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: styles.bar,\n    children: [/*#__PURE__*/_jsxDEV(RadioIcon, {\n      className: styles.orange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: styles.orangeText,\n      children: \"NO AR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TvIcon, {\n      className: styles.tv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: styles.tvText,\n      children: \"ENCONTRO - 10:00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateIcon, {\n      className: styles.update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: styles.updateText,\n      children: [\"\\xDAltima atualiza\\xE7\\xE3o em \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"10:28\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: styles.date,\n      children: [\"Quinta, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: time.getDay()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 47\n      }, this), \" de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: time.getMonth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 83\n      }, this), \" de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: time.getFullYear()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 121\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: styles.clock,\n      variant: \"h4\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"\\u2044 \\u2044 \", time.getHours(), \":\", time.getMinutes(), \":\", time.getSeconds()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Footer, \"ic7q2QKLg+Fjlm3Secc4jwLfXfo=\");\n\n_c = Footer;\nexport default Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["D:/Trabalho/frontend/Desafio Globo/front/src/footer/footer.js"],"names":["Typography","Toolbar","FooterStyle","RadioButtonChecked","RadioIcon","Update","UpdateIcon","Tv","TvIcon","React","useState","useEffect","Footer","styles","time","setTime","Date","now","tick","intervalID","setInterval","cleanup","clearInterval","bar","orange","orangeText","tv","tvText","update","updateText","date","getDay","getMonth","getFullYear","clock","getHours","getMinutes","getSeconds"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,mBAApC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,kBAAkB,IAAIC,SAA/B,EAA0CC,MAAM,IAAIC,UAApD,EAAgEC,EAAE,IAAIC,MAAtE,QAAoF,oBAApF;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,MAAM,GAAGX,WAAW,EAA1B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAIM,IAAI,CAACC,GAAT,EAAD,CAAhC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,aAASO,IAAT,GAAgB;AACdH,MAAAA,OAAO,CAAC,IAAIC,IAAI,CAACC,GAAT,EAAD,CAAP;AACD;;AACD,QAAIE,UAAU,GAAGC,WAAW,CAC1B,MAAMF,IAAI,EADgB,EAE1B,IAF0B,CAA5B;AAIA,WAAO,SAASG,OAAT,GAAmB;AACxBC,MAAAA,aAAa,CAACH,UAAD,CAAb;AACD,KAFD;AAGD,GAXQ,CAAT;AAaA,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAEN,MAAM,CAACU,GAA3B;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEV,MAAM,CAACW;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEX,MAAM,CAACY,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEZ,MAAM,CAACa;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEb,MAAM,CAACc,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEd,MAAM,CAACe;AAA9B;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEf,MAAM,CAACgB,UAA9B;AAAA,iEAAgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOF,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEhB,MAAM,CAACiB,IAA9B;AAAA,0CAA4C;AAAA,kBAAShB,IAAI,CAACiB,MAAL;AAAT;AAAA;AAAA;AAAA;AAAA,cAA5C,uBAAgF;AAAA,kBAASjB,IAAI,CAACkB,QAAL;AAAT;AAAA;AAAA;AAAA;AAAA,cAAhF,uBAAsH;AAAA,kBAASlB,IAAI,CAACmB,WAAL;AAAT;AAAA;AAAA;AAAA;AAAA,cAAtH;AAAA;AAAA;AAAA;AAAA;AAAA,YAPE,eAQE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEpB,MAAM,CAACqB,KAA9B;AAAqC,MAAA,OAAO,EAAC,IAA7C;AAAA,6BAAkD;AAAA,qCAAyBpB,IAAI,CAACqB,QAAL,EAAzB,OAA2CrB,IAAI,CAACsB,UAAL,EAA3C,OAA+DtB,IAAI,CAACuB,UAAL,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA7BQzB,M;;KAAAA,M;AA+BT,eAAeA,MAAf","sourcesContent":["import { Typography, Toolbar } from '@material-ui/core';\r\nimport FooterStyle from './footer.style';\r\nimport { RadioButtonChecked as RadioIcon, Update as UpdateIcon, Tv as TvIcon } from '@material-ui/icons';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction Footer() {\r\n  const styles = FooterStyle();\r\n  const [time, setTime] = useState(new Date.now());\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      setTime(new Date.now())\r\n    }\r\n    let intervalID = setInterval(\r\n      () => tick(),\r\n      1000\r\n    );\r\n    return function cleanup() {\r\n      clearInterval(intervalID);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Toolbar className={styles.bar}>\r\n      <RadioIcon className={styles.orange} />\r\n      <Typography className={styles.orangeText}>NO AR</Typography >\r\n      <TvIcon className={styles.tv} />\r\n      <Typography className={styles.tvText}>ENCONTRO - 10:00</Typography >\r\n      <UpdateIcon className={styles.update} />\r\n      <Typography className={styles.updateText}>Última atualização em <strong>10:28</strong></Typography >\r\n  <Typography className={styles.date}>Quinta, <strong>{time.getDay()}</strong> de <strong>{time.getMonth()}</strong> de <strong>{time.getFullYear()}</strong></Typography >\r\n      <Typography className={styles.clock} variant='h4'><strong>&#8260; &#8260; {time.getHours()}:{time.getMinutes()}:{time.getSeconds()}</strong></Typography >\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport default Footer;"]},"metadata":{},"sourceType":"module"}