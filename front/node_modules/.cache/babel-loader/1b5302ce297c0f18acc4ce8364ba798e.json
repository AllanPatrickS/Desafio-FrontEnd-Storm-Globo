{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Trabalho\\\\frontend\\\\Desafio Globo\\\\front\\\\src\\\\body\\\\body.js\",\n    _s = $RefreshSig$();\n\nimport { Box, ButtonGroup, Container, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Row from './row/row';\nimport BodyStyle from './body.style';\n\nfunction Body(props) {\n  _s();\n\n  const styles = BodyStyle();\n  const [rows, setRows] = useState([]);\n  const types = ['', 'USUÁRIO', 'EMAIL', 'DATA DE INCLUSÃO', 'DATA DE ALTERAÇÃO', 'REGRAS', 'STATUS', 'AÇÕES'];\n  let page = 0;\n\n  async function getUsers() {\n    try {\n      let response = await fetch('http://localhost:8080/user');\n      let json = await response.json();\n      if (json.result != null) setRows(Array.from(json.result));else setRows([]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  ;\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  function handleChangePage() {}\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: styles.body,\n    minHeight: props.emptySpace,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        className: styles.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: styles.table,\n          \"aria-label\": \"user table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            className: styles.head,\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: types.map(type => /*#__PURE__*/_jsxDEV(TableCell, {\n                className: styles.headCell,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 39\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map(row => /*#__PURE__*/_jsxDEV(Row, {\n              row: row,\n              index: rows.indexOf(row)\n            }, row._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 35\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        className: styles.pagination,\n        \"aria-label\": \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: styles.paginationButton,\n          variant: \"contained\",\n          children: \"Primeiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.paginationButton,\n          variant: \"contained\",\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.paginationButton,\n          variant: \"contained\",\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.paginationButton,\n          variant: \"contained\",\n          children: \"Pr\\xF3ximo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.lastButton,\n          variant: \"contained\",\n          children: \"\\xFAltimo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Body, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/Trabalho/frontend/Desafio Globo/front/src/body/body.js"],"names":["Box","ButtonGroup","Container","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Button","React","useState","useEffect","Row","BodyStyle","Body","props","styles","rows","setRows","types","page","getUsers","response","fetch","json","result","Array","from","error","console","handleChangePage","body","emptySpace","container","tableContainer","table","head","map","type","headCell","row","indexOf","_id","pagination","paginationButton","lastButton"],"mappings":"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","sourcesContent":["import { Box, ButtonGroup, Container, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Row from './row/row';\r\nimport BodyStyle from './body.style';\r\n\r\nfunction Body(props) {\r\n  const styles = BodyStyle();\r\n  const [rows, setRows] = useState([]);\r\n  const types = ['', 'USUÁRIO', 'EMAIL', 'DATA DE INCLUSÃO', 'DATA DE ALTERAÇÃO', 'REGRAS', 'STATUS', 'AÇÕES']\r\n  let page = 0;\r\n\r\n  async function getUsers() {\r\n    try {\r\n      let response = await fetch(\r\n        'http://localhost:8080/user'\r\n      );\r\n      let json = await response.json();\r\n      if (json.result != null) setRows(Array.from(json.result));\r\n      else setRows([]);\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  function handleChangePage() {\r\n\r\n  };\r\n\r\n  return (\r\n    <Box className={styles.body} minHeight={props.emptySpace}>\r\n      <Container maxWidth={false} className={styles.container}>\r\n        <TableContainer component={Paper} className={styles.tableContainer}>\r\n          <Table className={styles.table} aria-label=\"user table\">\r\n            <TableHead className={styles.head}>\r\n              <TableRow>\r\n                {types.map((type) => (<TableCell key={type} className={styles.headCell}>{type}</TableCell>))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (<Row key={row._id} row={row} index={rows.indexOf(row)} />))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <ButtonGroup className={styles.pagination} aria-label=\"pagination\" >\r\n          <Button className={styles.paginationButton} variant='contained'>Primeiro</Button>\r\n          <Button className={styles.paginationButton} variant='contained'>Anterior</Button>\r\n          <Button className={styles.paginationButton} variant='contained'>{page}</Button>\r\n          <Button className={styles.paginationButton} variant='contained'>Próximo</Button>\r\n          <Button className={styles.lastButton} variant='contained'>último</Button>\r\n        </ButtonGroup >\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Body;"]},"metadata":{},"sourceType":"module"}